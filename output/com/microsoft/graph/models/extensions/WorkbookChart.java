// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.WorkbookChartAxes;
import com.microsoft.graph.models.extensions.WorkbookChartDataLabels;
import com.microsoft.graph.models.extensions.WorkbookChartAreaFormat;
import com.microsoft.graph.models.extensions.WorkbookChartLegend;
import com.microsoft.graph.models.extensions.WorkbookChartSeries;
import com.microsoft.graph.models.extensions.WorkbookChartTitle;
import com.microsoft.graph.models.extensions.WorkbookWorksheet;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.WorkbookChartSeriesCollectionResponse;
import com.microsoft.graph.requests.extensions.WorkbookChartSeriesCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Workbook Chart.
 */
public class WorkbookChart extends Entity implements IJsonBackedObject {


    /**
     * The Height.
     * 
     */
    @SerializedName("height")
    @Expose
    public Double height;

    /**
     * The Left.
     * 
     */
    @SerializedName("left")
    @Expose
    public Double left;

    /**
     * The Name.
     * 
     */
    @SerializedName("name")
    @Expose
    public String name;

    /**
     * The Top.
     * 
     */
    @SerializedName("top")
    @Expose
    public Double top;

    /**
     * The Width.
     * 
     */
    @SerializedName("width")
    @Expose
    public Double width;

    /**
     * The Axes.
     * 
     */
    @SerializedName("axes")
    @Expose
    public WorkbookChartAxes axes;

    /**
     * The Data Labels.
     * 
     */
    @SerializedName("dataLabels")
    @Expose
    public WorkbookChartDataLabels dataLabels;

    /**
     * The Format.
     * 
     */
    @SerializedName("format")
    @Expose
    public WorkbookChartAreaFormat format;

    /**
     * The Legend.
     * 
     */
    @SerializedName("legend")
    @Expose
    public WorkbookChartLegend legend;

    /**
     * The Series.
     * 
     */
    public WorkbookChartSeriesCollectionPage series;

    /**
     * The Title.
     * 
     */
    @SerializedName("title")
    @Expose
    public WorkbookChartTitle title;

    /**
     * The Worksheet.
     * 
     */
    @SerializedName("worksheet")
    @Expose
    public WorkbookWorksheet worksheet;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("series")) {
            final WorkbookChartSeriesCollectionResponse response = new WorkbookChartSeriesCollectionResponse();
            if (json.has("series@odata.nextLink")) {
                response.nextLink = json.get("series@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("series").toString(), JsonObject[].class);
            final WorkbookChartSeries[] array = new WorkbookChartSeries[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), WorkbookChartSeries.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            series = new WorkbookChartSeriesCollectionPage(response, null);
        }
    }
}
