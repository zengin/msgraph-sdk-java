// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.BooleanColumn;
import com.microsoft.graph.models.extensions.CalculatedColumn;
import com.microsoft.graph.models.extensions.ChoiceColumn;
import com.microsoft.graph.models.extensions.CurrencyColumn;
import com.microsoft.graph.models.extensions.DateTimeColumn;
import com.microsoft.graph.models.extensions.DefaultColumnValue;
import com.microsoft.graph.models.extensions.GeolocationColumn;
import com.microsoft.graph.models.extensions.LookupColumn;
import com.microsoft.graph.models.extensions.NumberColumn;
import com.microsoft.graph.models.extensions.PersonOrGroupColumn;
import com.microsoft.graph.models.extensions.TextColumn;
import com.microsoft.graph.models.extensions.Entity;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Column Definition.
 */
public class ColumnDefinition extends Entity implements IJsonBackedObject {


    /**
     * The Boolean.
     * 
     */
    @SerializedName("boolean")
    @Expose
    public BooleanColumn msgraphboolean;

    /**
     * The Calculated.
     * 
     */
    @SerializedName("calculated")
    @Expose
    public CalculatedColumn calculated;

    /**
     * The Choice.
     * 
     */
    @SerializedName("choice")
    @Expose
    public ChoiceColumn choice;

    /**
     * The Column Group.
     * 
     */
    @SerializedName("columnGroup")
    @Expose
    public String columnGroup;

    /**
     * The Currency.
     * 
     */
    @SerializedName("currency")
    @Expose
    public CurrencyColumn currency;

    /**
     * The Date Time.
     * 
     */
    @SerializedName("dateTime")
    @Expose
    public DateTimeColumn dateTime;

    /**
     * The Default Value.
     * 
     */
    @SerializedName("defaultValue")
    @Expose
    public DefaultColumnValue defaultValue;

    /**
     * The Description.
     * 
     */
    @SerializedName("description")
    @Expose
    public String description;

    /**
     * The Display Name.
     * 
     */
    @SerializedName("displayName")
    @Expose
    public String displayName;

    /**
     * The Enforce Unique Values.
     * 
     */
    @SerializedName("enforceUniqueValues")
    @Expose
    public Boolean enforceUniqueValues;

    /**
     * The Geolocation.
     * 
     */
    @SerializedName("geolocation")
    @Expose
    public GeolocationColumn geolocation;

    /**
     * The Hidden.
     * 
     */
    @SerializedName("hidden")
    @Expose
    public Boolean hidden;

    /**
     * The Indexed.
     * 
     */
    @SerializedName("indexed")
    @Expose
    public Boolean indexed;

    /**
     * The Lookup.
     * 
     */
    @SerializedName("lookup")
    @Expose
    public LookupColumn lookup;

    /**
     * The Name.
     * 
     */
    @SerializedName("name")
    @Expose
    public String name;

    /**
     * The Number.
     * 
     */
    @SerializedName("number")
    @Expose
    public NumberColumn number;

    /**
     * The Person Or Group.
     * 
     */
    @SerializedName("personOrGroup")
    @Expose
    public PersonOrGroupColumn personOrGroup;

    /**
     * The Read Only.
     * 
     */
    @SerializedName("readOnly")
    @Expose
    public Boolean readOnly;

    /**
     * The Required.
     * 
     */
    @SerializedName("required")
    @Expose
    public Boolean required;

    /**
     * The Text.
     * 
     */
    @SerializedName("text")
    @Expose
    public TextColumn text;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
