// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.callrecords.models.extensions;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Device Info.
 */
public class DeviceInfo implements IJsonBackedObject {

    @SerializedName("@odata.type")
    @Expose
    public String oDataType;

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

    /**
     * The Capture Device Name.
     * 
     */
    @SerializedName("captureDeviceName")
    @Expose
    public String captureDeviceName;

    /**
     * The Capture Device Driver.
     * 
     */
    @SerializedName("captureDeviceDriver")
    @Expose
    public String captureDeviceDriver;

    /**
     * The Render Device Name.
     * 
     */
    @SerializedName("renderDeviceName")
    @Expose
    public String renderDeviceName;

    /**
     * The Render Device Driver.
     * 
     */
    @SerializedName("renderDeviceDriver")
    @Expose
    public String renderDeviceDriver;

    /**
     * The Sent Signal Level.
     * 
     */
    @SerializedName("sentSignalLevel")
    @Expose
    public Integer sentSignalLevel;

    /**
     * The Received Signal Level.
     * 
     */
    @SerializedName("receivedSignalLevel")
    @Expose
    public Integer receivedSignalLevel;

    /**
     * The Sent Noise Level.
     * 
     */
    @SerializedName("sentNoiseLevel")
    @Expose
    public Integer sentNoiseLevel;

    /**
     * The Received Noise Level.
     * 
     */
    @SerializedName("receivedNoiseLevel")
    @Expose
    public Integer receivedNoiseLevel;

    /**
     * The Initial Signal Level Root Mean Square.
     * 
     */
    @SerializedName("initialSignalLevelRootMeanSquare")
    @Expose
    public float initialSignalLevelRootMeanSquare;

    /**
     * The Cpu Insufficent Event Ratio.
     * 
     */
    @SerializedName("cpuInsufficentEventRatio")
    @Expose
    public float cpuInsufficentEventRatio;

    /**
     * The Render Not Functioning Event Ratio.
     * 
     */
    @SerializedName("renderNotFunctioningEventRatio")
    @Expose
    public float renderNotFunctioningEventRatio;

    /**
     * The Capture Not Functioning Event Ratio.
     * 
     */
    @SerializedName("captureNotFunctioningEventRatio")
    @Expose
    public float captureNotFunctioningEventRatio;

    /**
     * The Device Glitch Event Ratio.
     * 
     */
    @SerializedName("deviceGlitchEventRatio")
    @Expose
    public float deviceGlitchEventRatio;

    /**
     * The Low Speech To Noise Event Ratio.
     * 
     */
    @SerializedName("lowSpeechToNoiseEventRatio")
    @Expose
    public float lowSpeechToNoiseEventRatio;

    /**
     * The Low Speech Level Event Ratio.
     * 
     */
    @SerializedName("lowSpeechLevelEventRatio")
    @Expose
    public float lowSpeechLevelEventRatio;

    /**
     * The Device Clipping Event Ratio.
     * 
     */
    @SerializedName("deviceClippingEventRatio")
    @Expose
    public float deviceClippingEventRatio;

    /**
     * The Howling Event Count.
     * 
     */
    @SerializedName("howlingEventCount")
    @Expose
    public Integer howlingEventCount;

    /**
     * The Render Zero Volume Event Ratio.
     * 
     */
    @SerializedName("renderZeroVolumeEventRatio")
    @Expose
    public float renderZeroVolumeEventRatio;

    /**
     * The Render Mute Event Ratio.
     * 
     */
    @SerializedName("renderMuteEventRatio")
    @Expose
    public float renderMuteEventRatio;

    /**
     * The Mic Glitch Rate.
     * 
     */
    @SerializedName("micGlitchRate")
    @Expose
    public float micGlitchRate;

    /**
     * The Speaker Glitch Rate.
     * 
     */
    @SerializedName("speakerGlitchRate")
    @Expose
    public float speakerGlitchRate;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
